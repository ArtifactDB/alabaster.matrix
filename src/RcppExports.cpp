// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// lowest_double
double lowest_double();
RcppExport SEXP _alabaster_matrix_lowest_double() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    rcpp_result_gen = Rcpp::wrap(lowest_double());
    return rcpp_result_gen;
END_RCPP
}
// highest_double
double highest_double();
RcppExport SEXP _alabaster_matrix_highest_double() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    rcpp_result_gen = Rcpp::wrap(highest_double());
    return rcpp_result_gen;
END_RCPP
}
// collect_double_attributes
Rcpp::List collect_double_attributes(Rcpp::NumericVector x);
RcppExport SEXP _alabaster_matrix_collect_double_attributes(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(collect_double_attributes(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_alabaster_matrix_lowest_double", (DL_FUNC) &_alabaster_matrix_lowest_double, 0},
    {"_alabaster_matrix_highest_double", (DL_FUNC) &_alabaster_matrix_highest_double, 0},
    {"_alabaster_matrix_collect_double_attributes", (DL_FUNC) &_alabaster_matrix_collect_double_attributes, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_alabaster_matrix(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
